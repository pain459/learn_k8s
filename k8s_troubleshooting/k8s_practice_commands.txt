# To get required contexts
PS C:\Users\kumar> kubectl config get-contexts
CURRENT   NAME             CLUSTER          AUTHINFO         NAMESPACE
*         docker-desktop   docker-desktop   docker-desktop

---

# Create a new context
PS C:\Users\kumar> kubectl config set-context local-context-1 --cluster=docker-desktop --user=docker-desktop
Context "local-context-1" created.
PS C:\Users\kumar> kubectl config get-contexts
CURRENT   NAME              CLUSTER          AUTHINFO         NAMESPACE
*         docker-desktop    docker-desktop   docker-desktop
          local-context-1   docker-desktop   docker-desktop
PS C:\Users\kumar>

---

# Create local namesapces in a given context
PS C:\Users\kumar> kubectl --context local-context-1 create namespace local-namespace-1
namespace/local-namespace-1 created
PS C:\Users\kumar> kubectl --context local-context-1 get namespaces
NAME                STATUS   AGE
default             Active   9m3s
kube-node-lease     Active   9m3s
kube-public         Active   9m3s
kube-system         Active   9m3s
local-namespace-1   Active   7s
PS C:\Users\kumar>

---

# Set up default context and namespace
kubectl config set-context my-context-1 --namespace=local-namespace-1
kubectl config use-context my-context-1

---

# Apply the configmap, deployment and service in order.
PS D:\src_git\learn_k8s\practice_files> kubectl --context local-context-1 -n local-namespace-1 apply -f .\hello-world-configmap.yaml
configmap/hello-world-content created
PS D:\src_git\learn_k8s\practice_files> kubectl --context local-context-1 -n local-namespace-1 apply -f .\hello-world-deployment.yaml
deployment.apps/hello-world-deployment created
PS D:\src_git\learn_k8s\practice_files> kubectl --context local-context-1 -n local-namespace-1 apply -f .\hello-world-service.yaml   
service/hello-world-service created

---

# Accessing the newly configured services.

PS C:\Users\kumar> kubectl --context local-context-1 -n local-namespace-1 describe configmaps hello-world-content
Name:         hello-world-content
Namespace:    local-namespace-1
Labels:       <none>
Annotations:  <none>

Data
====
index.html:
----
<html>
<head><title>Hello World</title></head>
<body>
  <h1>Hello, World from Nginx on Kubernetes!</h1>
</body>
</html>


BinaryData
====

Events:  <none>
PS C:\Users\kumar> kubectl --context local-context-1 -n local-namespace-1 get pods
NAME                                      READY   STATUS    RESTARTS   AGE
hello-world-deployment-5d9ddbb9b4-5cksk   1/1     Running   0          30s
hello-world-deployment-5d9ddbb9b4-lm6h5   1/1     Running   0          30s
PS C:\Users\kumar> kubectl --context local-context-1 -n local-namespace-1 get deployment
NAME                     READY   UP-TO-DATE   AVAILABLE   AGE
hello-world-deployment   2/2     2            2           39s
PS C:\Users\kumar> kubectl --context local-context-1 -n local-namespace-1 get replicaset
NAME                                DESIRED   CURRENT   READY   AGE
hello-world-deployment-5d9ddbb9b4   2         2         2       46s
PS C:\Users\kumar> kubectl --context local-context-1 -n local-namespace-1 get services
NAME                  TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE
hello-world-service   NodePort   10.99.248.221   <none>        80:30080/TCP   24s
PS C:\Users\kumar>

---

